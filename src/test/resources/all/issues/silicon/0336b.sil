// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/


field parent : Ref
field rank : Int

predicate uf_bank(b:Set[Ref])
{ (forall lol:Ref :: {lol in b} lol in b ==>
    acc(lol.parent) && acc(lol.rank) && 0 <= lol.rank) &&
  (forall lol:Ref :: {lol.parent} lol in b && lol.parent != null ==>
    lol.parent in b && lol.parent.rank > lol.rank)
}

method bad(b:Set[Ref],l:Ref)
  requires uf_bank(b)
  requires l in b
  ensures false
{
  unfold uf_bank(b);
  fold uf_bank(b);
  //:: ExpectedOutput(assert.failed:assertion.false)
  assert
    let n == (unfolding uf_bank(b) in l.rank) in
    n > n
}

method veryBad()
  ensures false
{
  var l : Ref;
  l := new(parent,rank);
  l.parent := null;
  l.rank := 0;
  //:: UnexpectedOutput(fold.failed:insufficient.permission, /carbon/issue/237/)
  //:: UnexpectedOutput(fold.failed:assertion.false, /carbon/issue/237/)
  fold uf_bank(Set(l));
  bad(Set(l),l);
}

