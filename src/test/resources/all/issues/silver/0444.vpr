// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/


predicate falze()
{
    false
}

method test_unfold(){
    //:: ExpectedOutput(unfold.failed:permission.not.positive)
    unfold acc(falze(), none)
    assert false
}

method test_unfold_unknown(p: Perm){
    assume p >= none
    //:: ExpectedOutput(unfold.failed:permission.not.positive)
    unfold acc(falze(), p)
    //:: ExpectedOutput(assert.failed:assertion.false)
    //:: MissingOutput(assert.failed:assertion.false, /Silicon/issue/34/)
    assert false
}

method test_unfolding(){
    //:: ExpectedOutput(assert.failed:permission.not.positive)
    assert unfolding acc(falze(), none) in false
}

method test_unfolding_unknown(p: Perm){
    assume p >= none
    //:: ExpectedOutput(assert.failed:permission.not.positive)
    //:: ExpectedOutput(assert.failed:assertion.false)
    //:: MissingOutput(assert.failed:assertion.false, /Silicon/issue/34/)
    assert unfolding acc(falze(), p) in false
}

method test_fold(){
    //:: ExpectedOutput(fold.failed:permission.not.positive)
    fold acc(falze(), none)
}

method test_fold_unknown(p: Perm){
    assume p >= none
    //:: ExpectedOutput(fold.failed:permission.not.positive)
    fold acc(falze(), p)
}