import "../decreaseOrder/importAllDec.sil"

field next: Ref
field elem: Int

domain Test[T]{
    function test(t: T): Bool
}

predicate list(xs: Ref) {
  acc(xs.next) && acc(xs.elem) &&
  (xs.next != null ==> list(xs.next))
}

function length(xs: Ref): Int
  requires acc(list(xs))
  ensures result > 0
{
  unfolding list(xs) in xs.next == null ? 1 : 1 + length(xs.next)
}
