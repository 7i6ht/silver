import "../decreaseOrder/int_decreases.vpr"


function g(x: Int): Int
ensures result == 1
decreases x
{
  x > 1 ? h(g(x-1)-1) : 1
}

//:: ExpectedOutput(termination.failed:variant.not.decreasing)
function h(x: Int): Int
//:: UnexpectedOutput(postcondition.violated:assertion.false, /silicon/issue/247/)
ensures result == 1
decreases x
{
  x > 1 ? g(1 + h(x-1)) : 1
}