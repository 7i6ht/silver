function NonDet1(vari1: Bool):Bool {
    true
}

function NonDet2(vari1:Bool, vari2:Bool): Bool {
    true
}

function func(b: Bool): Bool
  ensures exists k: Bool :: 
      [NonDet1(k) ? true : (b && 
          [NonDet1(k) ? k : (exists j: Bool :: 
              [NonDet2(k, j) ? true : j, true || j])
          , k || exists j: Bool :: true || j]),
      true || (b && (k || exists j: Bool :: true || j))] {
      true
  }

method foo() returns ()
    ensures exists k: Bool :: [NonDet1(k) ? k : true, k || true]
{

}